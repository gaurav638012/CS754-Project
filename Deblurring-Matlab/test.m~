addpath(genpath(pwd))
clear;
clc;
close all;

%filter = fspecial('gaussian',[25 25],1.6);
filter = fspecial('average',[9 9]);
%filter = zeros(15)
for i=-7:7
    for j=-7:&
peak = 1;
img = im2double(rgb2gray(imread('images/ridges.png')));
figure('Name','Original');
imshow(img);

blurred_img = imfilter(img,filter);
y = poissrnd(blurred_img*peak);
y = y / max(max(y));

figure('Name','Noisy');
imshow(y);

H = @(x) FilterFunc(x,filter,size(img));
beta = 0.6;
lambda = 440;
lambda_step = 1.065;
max_iter = 75;
epsilon = 1e-7;
verbose = 1;

rec = P4IP(y,beta,lambda,lambda_step,size(img),H,max_iter,epsilon,verbose);
rec = rec / max(max(rec));

figure('Name','Reconstructed');
imshow(rec);

fprintf("Noisy image PSNR: %f\n",getPSNR(y,img));
fprintf("Reconstructed image PSNR: %f\n",getPSNR(rec,img));
